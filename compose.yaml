services:
  api:
    build:
      context: ./src/api
      dockerfile: Containerfile
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/db
    expose:
      - "8080"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  web:
    build:
      context: ./src/web
      dockerfile: Containerfile
      args:
        ENV: compose
    ports:
      - "80:80"
    volumes:
      - ./src/web/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/" ]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 5s

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  pg_data: {}
